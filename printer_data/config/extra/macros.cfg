#####################################################################
# Homing Override
#####################################################################
[gcode_macro _HOME_PRE_AXIS]
gcode:
  {% set HOME_CURRENT = 0.7 %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

[gcode_macro _HOME_POST_AXIS]
gcode:
  {% set axis = params.AXIS %}
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}

  # Move away
  SAVE_GCODE_STATE NAME=home_post_axis
  G91
  G0 {axis}-10 F3600
  RESTORE_GCODE_STATE NAME=home_post_axis

  # Make sure StallGuard registers are cleared
  M400
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

#####################################################################
# Filament Macros
#####################################################################
  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

#####################################################################
# Stealthburner States
#####################################################################
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z

#####################################################################
# Start / End Macros
#####################################################################

# OrcaSlicer start gcode
# PRINT_START 
#   EXTRUDER=[nozzle_temperature_initial_layer] 
#   BED=[bed_temperature_initial_layer_single] 
#   CHAMBER=[chamber_temperature] 
#   FILAMENT=[filament_type] 
#   PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} 
#   PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}

[gcode_macro PRINT_START]
gcode:
    {% set EXTRUDER_WARM = params.EXTRUDER_WARM|default(150)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(235)|int %}
    {% set CHAMBER = params.CHAMBER|default(0)|int %}
    {% set OFFSET = params.OFFSET|default(0.0)|float %}
    {% set BED = params.BED|default(110)|int %}
    {% set BED_TYPE = params.BED_TYPE|default("Textured PEI Plate")|string %}
    {% set FILAMENT = params.FILAMENT|default("PLA")|string %}

    WAKE
    BED_MESH_CLEAR
    M109 S{EXTRUDER_WARM}       ; preheat nozzle to probing temp
    M190 S{BED} # Wait for Bed to Heatup
    
    # Only home if needed
    {% if printer.toolhead.homed_axes != "xyz" %}
    STATUS_HOMING
    G28 X Y
    {% endif %}

    G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model

    # Do Z Tilt if needed
    {% if printer.z_tilt.applied == False %}
    STATUS_LEVELING
    Z_TILT_ADJUST
    {% endif %}
    
    G28 Z METHOD=PROXIMITY ; home again
    
    BED_MESH_CALIBRATE RUNS=2

    # Move to purge position
    M82 # Extruder to Absolute mode
    G90 # Absolute positioning
    G0 Z10 F3000 # Lift Z
    G0 X5 Y0
    G0 Z0.10 F500 # Lower nozzle
    
    STATUS_HEATING
    M104 S{EXTRUDER} # Set Extruder to Warm
    M109 S{EXTRUDER} # Wait for Extruder to Heatup
    G4 P10000                           ; give the hot block 20s to stabilize
    
    #G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only with hot nozzle
    #SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer
    
    {% if FILAMENT == "ASA" %}
    SET_GCODE_OFFSET Z=0.0
    {% elif FILAMENT == "ABS" %}
    SET_GCODE_OFFSET Z=0.0
    {% else %}
    SET_GCODE_OFFSET Z=0.08
    {% endif %}
    
    
    # Start purge process
    G92 E0 # reset extrusion distance
    G0 E10 F200 #  Extrude to prime nozzle
    G92 E0 # reset extrusion distance
    G4 P3000 # Dwell for 3 seconds
    G0 X10 F200 # Move slowly away from the blob
    G0 Y3 F400
    G4 P1000 # Dwell for 1 second
    STATUS_BUSY

# SuperSlicer end gcode
# PRINT_END
[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    G91                            ; relative positioning
    #   Get Z Boundary
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% if printer.toolhead.position.z < (max_z - 5) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    M104 S0                        ; Turn off Extruder
    G0 Z{z_safe} F3600             ; move nozzle up
    G90                            ; absolute positioning
    G0 X340 Y340 F3600             ; move nozzle to remove stringing
    M84                            ; Turn off steppers
    
    {% if printer.heater_bed.temperature > 60 %}
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=60
    {% else %}
        M107 ; turn off fan
        M140 S0 ; turn off bed
    	STATUS_OFF
    {% endif %}

[delayed_gcode gradual_cooldown]
gcode:
    {% if printer.heater_bed.target > 40 %}
        M140 S{ printer.heater_bed.target - 5 }
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=60
    {% else %}
        M140 S0 ; turn off bed
        SLEEP ; Turn off lights and such
    	STATUS_OFF
    {% endif %}

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
gcode:
  _Z_TILT_ADJUST
  G0 Z15              # Raise the nozzle after Z Tilt Adjust
  G0 X177 Y180 F8000  # Go to the center of the bed

########
# Utilities
########

[gcode_macro CASELIGHT_ON]
gcode:
    SET_PIN PIN=caselight VALUE=1.0

[gcode_macro CASELIGHT_OFF]
gcode:
    SET_PIN PIN=caselight VALUE=0.0

[gcode_macro CANCEL_COOL]
gcode:
    UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=0
    STATUS_READY

[gcode_macro WARM]
gcode:
    WAKE
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=105
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=170

[gcode_macro WAKE]
gcode:
    CANCEL_COOL
    CASELIGHT_ON
    
[gcode_macro SLEEP]
gcode:
    CANCEL_COOL
    CASELIGHT_OFF
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    STATUS_OFF

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SLEEP

[gcode_macro SHUTDOWN]
gcode:
    OFF                                               ; Shortcut to turn everything off (see above for this macro)
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

[gcode_macro FORCE_POSITION]
gcode:
    SET_KINEMATIC_POSITION X=10 Y=10 Z=10


#[gcode_macro POWER_OFF_PRINTER]
#gcode:
#  {action_call_remote_method("set_device_power", device="printer_led", state="off")}
#  {action_call_remote_method("set_device_power", device="printer", state="off")}

#[delayed_gcode delayed_printer_off]
#  initial_duration: 300. gcode: {% if printer.extruder.target >= 50 or printer.extruder.temperature >= 50 or printer.heater_bed.temperature >= 50 or printer.idle_timeout.state == "Printing" %}
#  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=300{% else %} POWER_OFF_PRINTER {% endif %}

# [gcode_macro DUMP_PARAMETERS]
# gcode:
#    {% for name1 in printer %}
#       {% for name2 in printer[name1] %}
#          { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
#       {% else %}
#          { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
#       {% endfor %}
#    {% endfor %}
